version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: smart_contract_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices_network

  # Unified Main API (Port 8000)
  unified-main:
    build:
      context: .
      dockerfile: Dockerfile.unified
    container_name: unified-main
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/smart_contract_db
      - SECRET_KEY=${SECRET_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - microservices_network

  # Contract Service (Port 8001)
  contract-service:
    build:
      context: ./contract-service
      dockerfile: Dockerfile
    container_name: contract-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/smart_contract_db
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - microservices_network

volumes:
  postgres_data:

networks:
  microservices_network:
    driver: bridge
