---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: smart-contract-rewriter
  labels:
    app.kubernetes.io/name: smart-contract-rewriter
    app.kubernetes.io/component: config
data:
  # Database Configuration
  POSTGRES_DB: "smart_contracts"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Application Configuration
  APP_NAME: "Smart Contract Rewriter"
  APP_VERSION: "1.0.0"
  LOG_LEVEL: "INFO"
  
  # API Configuration
  API_V1_PREFIX: "/api/v1"
  CORS_ORIGINS: "http://localhost:3000,https://smart-contracts.yourdomain.com"
  
  # Rate Limiting
  RATE_LIMIT_PER_MINUTE: "60"
  
  # File Upload Limits
  MAX_FILE_SIZE_MB: "10"
  
  # Monitoring
  METRICS_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: smart-contract-rewriter
  labels:
    app.kubernetes.io/name: smart-contract-rewriter
    app.kubernetes.io/component: frontend-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Handle React Router
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # API proxy
        location /api/ {
            proxy_pass http://backend-service:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }